
#!/bin/bash
time=$(git rev-list --count $(git rev-parse HEAD))

win=0
mail=0
cody=0
IFS=$'\n'
mail_content="From: Alice\nDate: 1 July 2021 at 20:26\nMessage-ID: 0\nSubject: My love\nTo: Bob\nContent:\nYou know that I really love encryption. So I want to share with you some knowledge of \"SHA-1\".\n> All major web browser vendors ceased acceptance of SHA-1 SSL certificates in 2017.[10][11][12] In February 2017, CWI Amsterdam and Google announced they had performed a collision attack against SHA-1, publishing two dissimilar PDF files which produced the same SHA-1 hash.[13][2] But SHA-1 is still secure for HMAC.[14]\nMicrosoft has discontinued SHA-1 code signing support for Windows Update on August 7, 2020. \nI read the paragraph on http://wikipedia.org\nEven the \"git commit\" is generated by SHA-1. Although the SHA-1 collision has been found by Google, I still like this encryption method.\nBy the way, SHA-1, in fact, cannot be reversed, so I don't know how can you read this mail.\n(The \"CKEFGISC{Don+_7e11_0+her_Your_Key_L;ke_7h;s}\" is just the salt, not any key.)\nBut if you read this, will you marry me?"

[[ $(grep 'CKEFGISC{7he_&peci@1_F!1e_With_M@g!c_P0wer}' ./FILE 2> /dev/null) ]] && win=1
[[ $(grep "will you marry me?" Alice_mail 2> /dev/null) ]] && mail=1
[[ $(grep "CKEFGISC{Happy_Birthday_My_Little_Cody_<3}" David_schedule 2> /dev/null) ]] && cody=1


Say(){
    echo $1
    sleep 1s
}
#08:00
if [[ $time == 1 ]];then
    Say "Percy: Woof! Dear "$(git config user.name)", it is 08:00 now."
    Say "Percy: Our little Cody seems to have some worries."
    Say "Percy: Maybe you can remind his older brother something by modifying his schedule."
    Say "Percy: Be careful with the format of the schedule. A wrong format will let David know that his schedule has been modified."

#12:00
elif [[ $time == 2 ]];then
    Say "Percy: Woof! Dear "$(git config user.name)"."
    Say "Percy: No. I can't do the mission for you. I know the future, but my body is in the past."
    Say "Percy: The only thing I can do to change the history is talk to you - the future man."
    Say "Percy: Talk to the lab members, they might need your help."
    Say "Percy: Perhaps the thing you are looking for can only be found at 08:00."

#16:00
elif [[ $time == 3 ]];then
    Say "Percy: Woof! Dear "$(git config user.name)"."
    Say "Percy: David is looking for something, bring the thing he want to this time period."
#20:00
else
    if [[ $win == 0 ]];then
        Say "Percy: Woof! Dear "$(git config user.name)", I am the machine dog Percy."
        Say "Percy: The Lab-109 is developing a new kind of energy, but their device of the lab accidentally exploded."
        Say "Percy: Use the GanshIunTimemachine a.k.a GIT made by Lab-109 to go to the past and fix the problem."
        Say "Percy: With 'git log' you can view the commit history, and using 'git checkout' can take you to previous commits."
        Say "Percy: Every time you change the history, 'git add and commit' can save your changes but they may not be in the branch main."
        Say "Percy: So remember that, after you finish your work, merge the branch with the branch main."
        Say "Percy: The 'Game_checker' will check if you complete all the tasks and it can only be used in the branch main."
        Say "Percy: Don't worry! I will go with you and give you some hints!"
    else
        if [[ $(($mail+$cody)) == 2  ]];then
            Say "Percy: You did it! You save their lives and solve their difficult problems!"
            Say "Percy: Now use the 'Game_checker' in the branch main to check your progress!"
        else
            Say "Percy: You did it! You saved their lives!"
            Say "Percy: But some of them still looks unhappy......"
            Say "Maybe there remain some unsolved problems in the past?"
        fi
    fi
fi
